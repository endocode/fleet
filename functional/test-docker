#!/bin/bash -e

CDIR=$(cd `dirname $0` && pwd)

cd ${CDIR}/../
export VERSION=$(git describe --dirty)

if [ ! -S "$SSH_AUTH_SOCK" ]; then
  eval $(ssh-agent)
fi

# github doesn't support explicit file permission set, this is workaround
chmod 0600 functional/fixtures/id_rsa
ssh-add functional/fixtures/id_rsa
sudo systemctl stop fleet || true

if [ ! -x "bin/fleetd" ] || \
   [ ! -x "bin/fleetctl" ] || \
   [ ! $(bin/fleetctl | grep "$VERSION") ]; then
  ./build-docker
fi

docker run --rm -v ${CDIR}/../:/opt/fleet \
  -v /tmp:/tmp \
  -v /usr/bin:/opt/bin \
  -v /usr/sbin:/opt/sbin \
  -v /usr/lib64:/opt/lib64 \
  -v $SSH_AUTH_SOCK:$SSH_AUTH_SOCK \
  -v /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket \
  -e SSH_AUTH_SOCK=$SSH_AUTH_SOCK \
  -e VERSION=$VERSION \
  --privileged \
  --net=host google/golang:1.4 /bin/bash -c "
echo 'core:x:500:500:CoreOS Admin:/home/core:/bin/bash' >> /etc/passwd
echo 'core:x:500:' >> /etc/group
cd /opt/fleet
echo -e '#!/bin/sh\n LD_LIBRARY_PATH=/opt/lib64 /opt/lib64/ld-linux-x86-64.so.2 /opt/sbin/brctl \$@' > /opt/brctl
echo -e '#!/bin/sh\n LD_LIBRARY_PATH=/opt/lib64 /opt/lib64/ld-linux-x86-64.so.2 /opt/bin/systemd-nspawn \$@' > /opt/systemd-nspawn
echo -e '#!/bin/sh\n LD_LIBRARY_PATH=/opt/lib64 /opt/lib64/ld-linux-x86-64.so.2 /opt/bin/systemctl \$@' > /opt/systemctl
echo -e '#!/bin/sh\n LD_LIBRARY_PATH=/opt/lib64 /opt/lib64/ld-linux-x86-64.so.2 /opt/bin/machinectl \$@' > /opt/machinectl
chmod +x /opt/brctl /opt/systemd-nspawn /opt/systemctl /opt/machinectl
source build-env
eval \$(go env)
export PATH=\"\${PATH}:/opt:/opt/bin:/opt/sbin\"
go test github.com/coreos/fleet/functional -ldflags \"\${GLDFLAGS}\" -v
"
